name: Build StandardNotes/web docker image and push to ghcr.io

on:
  schedule:
    # to not abuse Github Action, only once a week , maybe once biweek?
    # Note: schedule is not guaranteed https://upptime.js.org/blog/2021/01/22/github-actions-schedule-not-working/ 
    - cron: '20 3 * * 2'
  workflow_dispatch:
    inputs:
      version:
        description: 'StandardNotes/web''s version'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  PACKAGE: standardnotes-web

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.REGISTRY }}
      - name: Set version on schedule
        id: cron
        if: github.event.schedule 
        #if: "${{ inputs.version == '' }}"
        run: echo ::set-output name=version::$(curl 'https://api.github.com/repos/standardnotes/app/git/matching-refs/tags/@standardnotes/web@' |jq -r 'last | .ref | split("@") |last')
      - name: Check Tag if exists
        id: check
        # https://stackoverflow.com/questions/32113330/check-if-imagetag-combination-already-exists-on-docker-hub
        # and swap the return code
        run: docker manifest inspect ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.PACKAGE }}:${{ inputs.version || steps.cron.outputs.version }} > /dev/null && echo ::set-output name=exists::1 || echo ::set-output name=exists::0
      - name: Build and push
        if: ${{ steps.check.outputs.exists == '0' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: STANDARDNOTES_WEB_VERSION=${{ inputs.version || steps.cron.outputs.version }}
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.PACKAGE }}:${{ inputs.version || steps.cron.outputs.version }}
      # TODO: cleanup old image
      #- name: Clean up old tags
